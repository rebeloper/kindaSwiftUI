{
  "ABIRoot": {
    "kind": "Root",
    "name": "TopLevel",
    "printedName": "TopLevel",
    "children": [
      {
        "kind": "Import",
        "name": "SwiftUI",
        "printedName": "SwiftUI",
        "declKind": "Import",
        "moduleName": "kindaSwiftUI",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "SwiftUI",
        "printedName": "SwiftUI",
        "declKind": "Import",
        "moduleName": "kindaSwiftUI",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "kindaSwiftUI",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "SwiftUI",
        "printedName": "SwiftUI",
        "declKind": "Import",
        "moduleName": "kindaSwiftUI",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "KindaSwiftUIContentView",
        "printedName": "KindaSwiftUIContentView",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(content:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "KindaSwiftUIContentView",
                "printedName": "kindaSwiftUI.KindaSwiftUIContentView<τ_0_0>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  }
                ],
                "usr": "s:12kindaSwiftUI05KindaB13UIContentViewV"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "() -> τ_0_0",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "GenericTypeParam",
                    "printedName": "τ_0_0"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  }
                ]
              }
            ],
            "declKind": "Constructor",
            "usr": "s:12kindaSwiftUI05KindaB13UIContentViewV7contentACyxGxyc_tcfc",
            "mangledName": "$s12kindaSwiftUI05KindaB13UIContentViewV7contentACyxGxyc_tcfc",
            "moduleName": "kindaSwiftUI",
            "genericSig": "<τ_0_0 where τ_0_0 : SwiftUI.View>",
            "sugared_genericSig": "<Content where Content : SwiftUI.View>",
            "declAttributes": [
              "Custom",
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "body",
            "printedName": "body",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "OpaqueTypeArchetype",
                "printedName": "some SwiftUI.View",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "View",
                    "printedName": "SwiftUI.View",
                    "usr": "s:7SwiftUI4ViewP"
                  }
                ]
              }
            ],
            "declKind": "Var",
            "usr": "s:12kindaSwiftUI05KindaB13UIContentViewV4bodyQrvp",
            "mangledName": "$s12kindaSwiftUI05KindaB13UIContentViewV4bodyQrvp",
            "moduleName": "kindaSwiftUI",
            "declAttributes": [
              "Custom",
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "OpaqueTypeArchetype",
                    "printedName": "some SwiftUI.View",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "View",
                        "printedName": "SwiftUI.View",
                        "usr": "s:7SwiftUI4ViewP"
                      }
                    ]
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:12kindaSwiftUI05KindaB13UIContentViewV4bodyQrvg",
                "mangledName": "$s12kindaSwiftUI05KindaB13UIContentViewV4bodyQrvg",
                "moduleName": "kindaSwiftUI",
                "genericSig": "<τ_0_0 where τ_0_0 : SwiftUI.View>",
                "sugared_genericSig": "<Content where Content : SwiftUI.View>",
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Struct",
        "usr": "s:12kindaSwiftUI05KindaB13UIContentViewV",
        "mangledName": "$s12kindaSwiftUI05KindaB13UIContentViewV",
        "moduleName": "kindaSwiftUI",
        "genericSig": "<τ_0_0 where τ_0_0 : SwiftUI.View>",
        "sugared_genericSig": "<Content where Content : SwiftUI.View>",
        "declAttributes": [
          "Custom",
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "View",
            "printedName": "View",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Body",
                "printedName": "Body",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "OpaqueTypeArchetype",
                    "printedName": "some SwiftUI.View",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "View",
                        "printedName": "SwiftUI.View",
                        "usr": "s:7SwiftUI4ViewP"
                      }
                    ]
                  }
                ]
              }
            ],
            "usr": "s:7SwiftUI4ViewP",
            "mangledName": "$s7SwiftUI4ViewP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "SwiftUI",
        "printedName": "SwiftUI",
        "declKind": "Import",
        "moduleName": "kindaSwiftUI",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "API",
        "printedName": "API",
        "children": [
          {
            "kind": "Function",
            "name": "hello",
            "printedName": "hello()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              }
            ],
            "declKind": "Func",
            "usr": "s:12kindaSwiftUI3APIV5helloyyFZ",
            "mangledName": "$s12kindaSwiftUI3APIV5helloyyFZ",
            "moduleName": "kindaSwiftUI",
            "static": true,
            "declAttributes": [
              "AccessControl"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Struct",
        "usr": "s:12kindaSwiftUI3APIV",
        "mangledName": "$s12kindaSwiftUI3APIV",
        "moduleName": "kindaSwiftUI",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "kindaSwiftUI",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "kindaSwiftUI",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "kindaSwiftUI",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "kindaSwiftUI",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Color",
        "printedName": "Color",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(hex:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Color",
                "printedName": "SwiftUI.Color",
                "usr": "s:7SwiftUI5ColorV"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:7SwiftUI5ColorV05kindaaB0E3hexACSS_tcfc",
            "mangledName": "$s7SwiftUI5ColorV05kindaaB0E3hexACSS_tcfc",
            "moduleName": "kindaSwiftUI",
            "declAttributes": [
              "RawDocComment"
            ],
            "isFromExtension": true,
            "init_kind": "Designated"
          }
        ],
        "declKind": "Struct",
        "usr": "s:7SwiftUI5ColorV",
        "mangledName": "$s7SwiftUI5ColorV",
        "moduleName": "SwiftUI",
        "intro_Macosx": "10.15",
        "intro_iOS": "13.0",
        "intro_tvOS": "13.0",
        "intro_watchOS": "6.0",
        "declAttributes": [
          "Frozen",
          "Available",
          "Available",
          "Available",
          "Available"
        ],
        "isExternal": true,
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "CustomStringConvertible",
            "printedName": "CustomStringConvertible",
            "usr": "s:s23CustomStringConvertibleP",
            "mangledName": "$ss23CustomStringConvertibleP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Transferable",
            "printedName": "Transferable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Representation",
                "printedName": "Representation",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "OpaqueTypeArchetype",
                    "printedName": "some CoreTransferable.TransferRepresentation",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TransferRepresentation",
                        "printedName": "CoreTransferable.TransferRepresentation",
                        "usr": "s:16CoreTransferable22TransferRepresentationP"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Sendable",
                        "printedName": "Swift.Sendable",
                        "usr": "s:s8SendableP"
                      }
                    ]
                  }
                ]
              }
            ],
            "usr": "s:16CoreTransferable0B0P",
            "mangledName": "$s16CoreTransferable0B0P"
          },
          {
            "kind": "Conformance",
            "name": "View",
            "printedName": "View",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "Body",
                "printedName": "Body",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Never",
                    "printedName": "Swift.Never",
                    "usr": "s:s5NeverO"
                  }
                ]
              }
            ],
            "usr": "s:7SwiftUI4ViewP",
            "mangledName": "$s7SwiftUI4ViewP"
          },
          {
            "kind": "Conformance",
            "name": "ShapeStyle",
            "printedName": "ShapeStyle",
            "usr": "s:7SwiftUI10ShapeStyleP",
            "mangledName": "$s7SwiftUI10ShapeStyleP"
          }
        ]
      }
    ],
    "json_format_version": 8
  },
  "ConstValues": [
    {
      "filePath": "\/Users\/rebeloper\/Documents\/Work\/Codes\/kindaSwiftUI\/kindaSwiftUI\/Build\/kindaSwiftUI\/kindaSwiftUI\/Sources\/License\/KindaSwiftUIContentView.swift",
      "kind": "BooleanLiteral",
      "offset": 384,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/rebeloper\/Documents\/Work\/Codes\/kindaSwiftUI\/kindaSwiftUI\/Build\/kindaSwiftUI\/kindaSwiftUI\/Sources\/License\/LicenseKeys.swift",
      "kind": "StringLiteral",
      "offset": 209,
      "length": 7,
      "value": "\"trial\""
    },
    {
      "filePath": "\/Users\/rebeloper\/Documents\/Work\/Codes\/kindaSwiftUI\/kindaSwiftUI\/Build\/kindaSwiftUI\/kindaSwiftUI\/Sources\/License\/LicenseKeys.swift",
      "kind": "StringLiteral",
      "offset": 269,
      "length": 33,
      "value": "\"pYlD3iXJipa0knId-NM8489BUId6uac\""
    },
    {
      "filePath": "\/Users\/rebeloper\/Documents\/Work\/Codes\/kindaSwiftUI\/kindaSwiftUI\/Build\/kindaSwiftUI\/kindaSwiftUI\/Sources\/License\/LicenseKeyStatus.swift",
      "kind": "StringLiteral",
      "offset": 1000,
      "length": 337,
      "value": "\"kindaSwiftUI license key is undefined or invalid. Please (1) set up a `KindaSwiftUI-Info.plist` file with a `key` for your license key (use `trial` or you may consider subscribing for 'SwiftUI Nation' to keep kindaSwiftUI awake 24\/7. https:\/\/store.rebeloper.com\/community ); (2) Wrap your app content into the 'KindaSwiftUIContentView'\""
    },
    {
      "filePath": "\/Users\/rebeloper\/Documents\/Work\/Codes\/kindaSwiftUI\/kindaSwiftUI\/Build\/kindaSwiftUI\/kindaSwiftUI\/Sources\/License\/LicenseKeyStatus.swift",
      "kind": "StringLiteral",
      "offset": 1382,
      "length": 257,
      "value": "\"The trial is full-featured and there's no expiry date, but without a subscription kindaSwiftUI gets lazy and sleeps from time to time. You may consider subscribing for 'SwiftUI Nation' to keep kindaSwiftUI awake 24\/7. https:\/\/store.rebeloper.com\/community\""
    },
    {
      "filePath": "\/Users\/rebeloper\/Documents\/Work\/Codes\/kindaSwiftUI\/kindaSwiftUI\/Build\/kindaSwiftUI\/kindaSwiftUI\/Sources\/License\/LicenseKeyStatus.swift",
      "kind": "StringLiteral",
      "offset": 1697,
      "length": 291,
      "value": "\"You have an inactive license key. The trial is full-featured and there's no expiry date, but without a subscription kindaSwiftUI gets lazy and sleeps from time to time. You may consider subscribing for 'SwiftUI Nation' to keep kindaSwiftUI awake 24\/7. https:\/\/store.rebeloper.com\/community\""
    }
  ]
}